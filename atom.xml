<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>繁星点点</title>
  
  
  <link href="https://stary1999.github.io/atom.xml" rel="self"/>
  
  <link href="https://stary1999.github.io/"/>
  <updated>2021-06-29T08:17:18.451Z</updated>
  <id>https://stary1999.github.io/</id>
  
  <author>
    <name>stary</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo安装与使用</title>
    <link href="https://stary1999.github.io/2021/06/29/hexoInstallAndUse/"/>
    <id>https://stary1999.github.io/2021/06/29/hexoInstallAndUse/</id>
    <published>2021-06-29T02:00:32.000Z</published>
    <updated>2021-06-29T08:17:18.451Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1.安装hexo"></a>1.安装hexo</h1><h2 id="hexo简介："><a href="#hexo简介：" class="headerlink" title="hexo简介："></a>hexo简介：</h2><p>hexo是一个静态博客框架，基于node.js，可以方便托管到github或者gitee。</p><p>hexo在本地编写、保存文件，通过Git发布到github的仓库中，github中有提供相关静态页面访问的服务，借此完成一个静态博客的搭建。相较于其他方式搭建博客，Hexo资源占用更小，结合github使用，不需要额外的域名，也不需要租用服务器（服务器到期是一个比较麻烦的问题）。且由于是静态网页，基本不用担心后台入侵的问题，整个过程中，数据从本地到github，不需要其他环节参与。</p><p>其次是Hexo的可定制化高，主题、插件丰富，可定制化程度也比较高，markdown （我主要使用）的写作方式也比较符合未来的发展与规划，对程序员比较友好，较大的缺点是md文档在使用图片时不是太理想，如果能够将图片文件直接保存在md文件中就好了，但估计实现（<del>不可能</del>）难度较大。</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>Github创建个人仓库</li><li>生成ssh并添加到GitHub</li><li>将Hexo部署到Github</li><li>其他</li></ol><span id="more"></span><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。</p><p>windows：git官网上下载，<a href="https://gitforwindows.org/">Download git</a>：<a href="https://gitforwindows.org/">https://gitforwindows.org/</a>。下载后打开Git Bash工具，用这个工具来使用git。</p><p>linux：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h3><p>由于Hexo是基于node.js编写的，使用需要安装node.js和npm工具</p><p>windows：官网下载：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p>linux：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><p>在Git Bash中，进入要建立博客的文件夹，或者在该文件夹下，右键使用Git Bash打开。此目录是博客目录的父目录。</p><p>Git Bash进入这个目录后，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>使用<code>hexo -v</code>检查hexo版本，测试是否暗转成功。</p><p>初始化Hexo：其中blogName是博客的名字，可以随便取，这个文件夹，即是博客文件夹。<br>进入文件夹，并在这个文件夹中安装博客系统。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blogName</span><br><span class="line">cd blogName</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>安装完成后，指定文件夹目录下有：</p><ul><li>node_moduls： #依赖包</li><li>public：#存放生成的页面</li><li>scaffold：#生成文章的模板</li><li>source：#存放文章、页面的目录</li><li>themes：#主题</li><li>_config.yml：#配置文件</li></ul><p>在Git Bash中输入（博客文件夹下）下列命令，开启本地服务。正常情况下，在浏览器中输入localhost:4000便可以打开博客。使用ctrl+c停止服务运行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p><strong>常用的命令还有：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean简写：hexo cl清除旧的静态资源</span><br><span class="line">hexo gender简写：hexo g生成静态文件</span><br><span class="line">hexo deploy简写：hexo d部署文件到网站</span><br><span class="line">hexo server简写：hexo s启动服务</span><br></pre></td></tr></table></figure><p>生成文章：建议title为英文。可在配置文件中开启默认标题，加上创建时期，便于区分。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line">或简写：hexo &lt;title&gt;</span><br></pre></td></tr></table></figure><h3 id="4-Github创建个人仓库"><a href="#4-Github创建个人仓库" class="headerlink" title="4 Github创建个人仓库"></a>4 Github创建个人仓库</h3><ol><li><p>注册/登录github账号</p></li><li><p>创建一个新的仓库（new repository），仓库名称为自己的用户名，后面加上.github.io</p><p>完整名称应为：用户名/用户名.github.io</p></li></ol><h3 id="生成ssh并添加到Github中"><a href="#生成ssh并添加到Github中" class="headerlink" title="生成ssh并添加到Github中"></a>生成ssh并添加到Github中</h3><p>在git bash中输入，其中youname和youemail为github的用户名和邮箱。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>输入下列命令检查，正确无误后，输入第三条创建ssh，将youemail替换为github邮箱，一路回车默认，正常情况下可以在C:\Users\用户名\.ssh文件夹中找到ssh的公私秘钥。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>选择id_rsa.pub，打开并复制里面的文本内容。</p><p>在github中，点击设置，找到ssh keys，选择new ssh key，将复制的公钥消息粘贴进去。</p><p>在git bash中验证是否成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi 用户名! You&#x27;ve successfully authenticated, but GitHub does not provide shell access</span><br></pre></td></tr></table></figure><p>则表示ssh部署成功</p><h3 id="6将hexo部署到Github"><a href="#6将hexo部署到Github" class="headerlink" title="6将hexo部署到Github"></a>6将hexo部署到Github</h3><p>打开博客文件夹下的_config.yml配置文件，在最末尾，修改配置文件：其中repo也可以选择  <a href="mailto:&#103;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#104;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;">&#103;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#104;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;</a>:用户名/用户名.github.io.git的方式，之前做的时候，使用https的方式提交失败，后面采用git的方式提交。具体地址也可以在github仓库中复制。brash则是提交到github仓库的哪一个分支中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安装插件并部署到github：插件必须安装，否则无法用命令将博客部署到Github。这个阶段如果报错，主要检查仓库名称是否正确，repo地址是否正确。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>部署成功后，可以在<a href="https://yourname.github.io/">https://yourname.github.io</a>查看博客</p><h3 id="7其他设置"><a href="#7其他设置" class="headerlink" title="7其他设置"></a>7其他设置</h3><ol><li><p>设置个性域名</p><p>购买域名后，在域名服务商将购买的域名解析至Github的即可，Github地址可以在域名查询网站查询。</p><p>登录Github，进入博客的仓库，点击仓库的setting，设置Custom domain，输入购买的域名。</p><p>最后在博客的source中创建一个名为CNAME的文件，无后缀，在文件中写入域名。</p><p>最后在git bash中重新部署一遍博客（clean，g，d），便可以通过个性域名访问博客。</p></li></ol><h1 id="2-Hexo配置（简单版）"><a href="#2-Hexo配置（简单版）" class="headerlink" title="2.Hexo配置（简单版）"></a>2.Hexo配置（简单版）</h1><h2 id="1-config-yml配置文件修改"><a href="#1-config-yml配置文件修改" class="headerlink" title="1._config.yml配置文件修改"></a>1._config.yml配置文件修改</h2><p>这里主要修改几项常用的，其他可以根据需求查看官方文档进行修改</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>url</code></td><td align="left">网址, 即为本博客的网址</td></tr><tr><td align="left"><code>new_post_name</code></td><td align="left">新文章的文件名称，建议修改为:year-:month-:day-:title.md</td></tr><tr><td align="left"><code>theme</code></td><td align="left">当前主题名称。值为<code>false</code>时禁用主题</td></tr></tbody></table><p>详细配置参数可以参考官网：<a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a></p><h2 id="2-更换主题"><a href="#2-更换主题" class="headerlink" title="2.更换主题"></a>2.更换主题</h2><p>主题商店链接：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>可以在主题商店选择喜欢的主题，可以预览样式，点击主题名称，可以查看主题github项目地址。一般主题中都有README.md文档，里面有相对详细的功能说明。</p><p><strong>注意</strong></p><ul><li>主题的安装过程中，主题必须放在themes文件夹下，更换主题只需要更换博客根目录中的主题名称即可。注意通过clone下载的主题中可能会有一个“.git”的隐藏文件夹，需要手动删除，不然会影响项目的上传（不能嵌套.git）。</li><li>各种主题中有各种功能，很多都需要安装插件，所以，在clone主题，修改配置文件中的主题后，还需要安装相应的插件。还有就是，很多功能时依赖于配置文件来设置的，当运行报错的时候，仔细检查配置文件中是否有某样功能处于开启状态，但是却没有配置相关参数。</li><li>更换主题后报错，首先检查插件是否装对，其次检查各种操作是否符合README.md文档的说明，检查相关参数是否设置完毕。可以根据报错的信息，大概判断错误是在哪个部位。最后，可以去主题的仓库，里面有个issue的部分，说不定别人也遇到了相同的问题，最后，也可以虚心向作者请教。</li></ul><h1 id="3-使用hexo"><a href="#3-使用hexo" class="headerlink" title="3.使用hexo"></a>3.使用hexo</h1><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><p>在git bash中，进入博客的目录。输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new postname</span><br></pre></td></tr></table></figure><p>在source/_post/文件夹中创建一个名字为postname的markdown文件。<br>（如果修改默认标题的话，以修改的为准），使用markdown编辑器，对md文件进行编辑，编写自己的文章，文章编写完成后，使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>便可以将文章推送到github。</p><p>在scaffolds文件下，有个post.md文件，里面是创建一个新的post时默认使用的模板：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">author: &#123;&#123; author &#125;&#125;</span><br><span class="line">tags: </span><br><span class="line">- default</span><br><span class="line">categories: </span><br><span class="line">- default</span><br></pre></td></tr></table></figure><p>这一段消息会被默认添加到每一篇文章中，包括了文章标题、创建的日期、作者、标签、分类。其中标签可以由多个，分类只能有一个。</p><h2 id="高级使用"><a href="#高级使用" class="headerlink" title="高级使用"></a>高级使用</h2><h3 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h3><p>略</p><h3 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h3><p>略</p><h3 id="文章统计"><a href="#文章统计" class="headerlink" title="文章统计"></a>文章统计</h3><p>略</p><h3 id="更换主页"><a href="#更换主页" class="headerlink" title="更换主页"></a>更换主页</h3><p>hexo默认的主页是显示文章列表，当我们不想首页显示文章列表时，可以自定义主页。</p><p>在source目录下，新建一个index文件夹，index文件夹中，新建一个index.md文件，填入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: index</span><br><span class="line">type: &quot;index&quot;</span><br><span class="line">permalink: index.html</span><br></pre></td></tr></table></figure><p>接下来填入需要在主页显示的内容，例如我的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* [主页](../home/)</span><br><span class="line">* [标签](../tages/)</span><br><span class="line">* [分类](../categories/)</span><br><span class="line">* [归档](../assort/)</span><br><span class="line">* [关于](../about/)</span><br></pre></td></tr></table></figure><p>打开根目录配置文件：_config.yml，修改path为’/index/‘，保存文件，重启服务器即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &#x27;&#x27;)  &#x27;/intro/&#x27;</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#x27;/index/&#x27;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br></pre></td></tr></table></figure><h1 id="final-踩坑"><a href="#final-踩坑" class="headerlink" title="final 踩坑"></a>final 踩坑</h1><h2 id="主题异常"><a href="#主题异常" class="headerlink" title="主题异常"></a>主题异常</h2><p>在使用主题时，开启服务后不断报错，<br>报错显示，有未定义的变量</p><p>无法运行，最后发现，是因为博客默认开启了评论功能，但是我没有再配置文件中添加相关的配置，于是就出现了“未定义的变量”的错误。</p><h2 id="hexo图片显示异常"><a href="#hexo图片显示异常" class="headerlink" title="hexo图片显示异常"></a>hexo图片显示异常</h2><ul><li><strong>设置路径</strong></li></ul><p>使用typora编辑md文件后，插入的图片如果是采用截图的方式，图片资源将会保存在临时文件中，图片的引用路径也是临时文件的路径。</p><p>首先，需要修改typora的图片设置：文件-偏好设置-图像，设置插入图片时的相关参数，选择复制图片到指定路径，指定路径为md文件的同名文件夹，并设置本地应用规则，如果对应服务器有账号，也可以选择上传到对应的服务器中（未尝试）。</p><p><img src="/2021/06/29/hexoInstallAndUse/image-20210629132211843.png" alt="image-20210629132211843"></p><ul><li><strong>hexo安装插件</strong></li></ul><p>修改配置文件_config.yml：设置post_asset_folder  为 true</p><p>安装插件 asset-image:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:<span class="comment">//github.com/CodeFalling/hexo-asset-image</span></span><br></pre></td></tr></table></figure><p>运行测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo s </span><br></pre></td></tr></table></figure><p><strong>注意修改图片路径</strong></p><p>注意修改图片路径中的\为/。</p><p>且文件名尽量不要为中文。</p><ul><li>其他方案</li></ul><ol><li>将图片放入<code>source/images</code>目录下,每次<code>generate</code>都会生成图片,在使用相对或绝对路径进行引用</li><li> 配置<code>hexo</code>的<code>_config.yml</code>文件, 将 <code>post_asset_folder</code> 设置为<code>true</code>, 这样每次new 生成一个文章时都会同步生成一个同名的文件夹,然后设置相对或绝对路径. </li><li> 使用<code>hexo</code>官方的解决方案,使用模版变量, <code>&#123;% asset_img slug [title] %&#125; </code></li></ol><p>前两中首页跟内容页会有一个加载失败的问题,而第三种则失去了<code>markdown</code>的意义。顾采用上述方案，保证本地文件显示正常，且网页正常显示。</p><p>参考：</p><ul><li><a href="https://cloud.tencent.com/developer/article/1702112">https://cloud.tencent.com/developer/article/1702112</a></li><li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">https://blog.csdn.net/sinat_37781304/article/details/82729029</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-安装hexo&quot;&gt;&lt;a href=&quot;#1-安装hexo&quot; class=&quot;headerlink&quot; title=&quot;1.安装hexo&quot;&gt;&lt;/a&gt;1.安装hexo&lt;/h1&gt;&lt;h2 id=&quot;hexo简介：&quot;&gt;&lt;a href=&quot;#hexo简介：&quot; class=&quot;headerlink&quot; title=&quot;hexo简介：&quot;&gt;&lt;/a&gt;hexo简介：&lt;/h2&gt;&lt;p&gt;hexo是一个静态博客框架，基于node.js，可以方便托管到github或者gitee。&lt;/p&gt;
&lt;p&gt;hexo在本地编写、保存文件，通过Git发布到github的仓库中，github中有提供相关静态页面访问的服务，借此完成一个静态博客的搭建。相较于其他方式搭建博客，Hexo资源占用更小，结合github使用，不需要额外的域名，也不需要租用服务器（服务器到期是一个比较麻烦的问题）。且由于是静态网页，基本不用担心后台入侵的问题，整个过程中，数据从本地到github，不需要其他环节参与。&lt;/p&gt;
&lt;p&gt;其次是Hexo的可定制化高，主题、插件丰富，可定制化程度也比较高，markdown （我主要使用）的写作方式也比较符合未来的发展与规划，对程序员比较友好，较大的缺点是md文档在使用图片时不是太理想，如果能够将图片文件直接保存在md文件中就好了，但估计实现（&lt;del&gt;不可能&lt;/del&gt;）难度较大。&lt;/p&gt;
&lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a href=&quot;#安装步骤&quot; class=&quot;headerlink&quot; title=&quot;安装步骤&quot;&gt;&lt;/a&gt;安装步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装Git&lt;/li&gt;
&lt;li&gt;安装Node.js&lt;/li&gt;
&lt;li&gt;安装Hexo&lt;/li&gt;
&lt;li&gt;Github创建个人仓库&lt;/li&gt;
&lt;li&gt;生成ssh并添加到GitHub&lt;/li&gt;
&lt;li&gt;将Hexo部署到Github&lt;/li&gt;
&lt;li&gt;其他&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="工具" scheme="https://stary1999.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="default" scheme="https://stary1999.github.io/tags/default/"/>
    
    <category term="hexo" scheme="https://stary1999.github.io/tags/hexo/"/>
    
    <category term="踩坑" scheme="https://stary1999.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="https://stary1999.github.io/2021/06/29/markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://stary1999.github.io/2021/06/29/markdown%E8%AF%AD%E6%B3%95/</id>
    <published>2021-06-29T02:00:08.000Z</published>
    <updated>2021-06-29T07:55:31.136Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1.基本语法"></a>1.基本语法</h1><h2 id="1-1-字体设置（斜体、粗体、删除线）"><a href="#1-1-字体设置（斜体、粗体、删除线）" class="headerlink" title="1.1 字体设置（斜体、粗体、删除线）"></a>1.1 字体设置（斜体、粗体、删除线）</h2><p>正常文字<br><em>斜体文字</em><br><em>斜体文字</em><br><strong>加粗文字</strong><br><em><strong>斜体加粗</strong></em><br><del>删除线</del></p><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/image-20210629101027698.png" alt="image-20210629101027698"></p><h2 id="1-2分级标题"><a href="#1-2分级标题" class="headerlink" title="1.2分级标题"></a>1.2分级标题</h2><p>标题用#+空格+标题内容表示，一个#号表示一级标题，最多为六级标题。</p><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/image-20210629101313316.png" alt="image-20210629101313316"></p><p>写法二：</p><p>略，待更新</p><span id="more"></span><h2 id="1-3-链接"><a href="#1-3-链接" class="headerlink" title="1.3 链接"></a>1.3 链接</h2><p>插入图片为了便于迁移文档，建议在文档同名目录下，新建一个文件夹用作保存图片资源。</p><p>在typora中，可以开启自动保存图片的设置，方便编写文档，否则，截屏的图片资源默认是存在临时文件夹中的，当清理系统时，临时文件会被删除，文档中的图片资源链接也会随之失效。</p><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/image-20210629102030713.png" alt="image-20210629102030713"></p><p>插入网页链接，可以用&lt;链接&gt;引起来，也可以直接输入链接地址，会自动转换。</p><p><strong>超链接</strong></p><p>格式为[内容]+(链接)</p><p>例如：<a href="baidu.com">百度</a></p><h2 id="1-4分割线"><a href="#1-4分割线" class="headerlink" title="1.4分割线"></a>1.4分割线</h2><p>在一行中用三个以上的星号（*），减号（-），底线（_)来建立分割线。注意行内不能有其他东西（可以插入空格）</p><hr><hr><hr><h2 id="1-5代码块"><a href="#1-5代码块" class="headerlink" title="1.5代码块"></a>1.5代码块</h2><h3 id="1批量代码"><a href="#1批量代码" class="headerlink" title="1批量代码"></a>1批量代码</h3><p>a:两种方式创建代码块，a：利用缩进tab（或四个空格）</p><p>未成功？？待更新</p><p>b:利用英文反引号，“`”,一般在键盘左上角。在代码的始末位置连续使用三个反引号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public class hello&#123;</span><br><span class="line">public static void main(String args[])&#123;</span><br><span class="line">Syetem.out.println(&quot;hello markdown!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2行内式代码"><a href="#2行内式代码" class="headerlink" title="2行内式代码"></a>2行内式代码</h3><p>在行内引用代码，使用一对反引号包裹代码内容，例如：这是一个<code>code</code>。</p><h3 id="3代码高亮"><a href="#3代码高亮" class="headerlink" title="3代码高亮"></a>3代码高亮</h3><p>在反引号后面加上对应的代码语言</p><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/image-20210629111930189.png" alt="image-20210629111930189"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">hello</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">Syetem.out.println(<span class="string">&quot;hello markdown!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        </p><h3 id="4代码块中包含html"><a href="#4代码块中包含html" class="headerlink" title="4代码块中包含html"></a>4代码块中包含html</h3><p><del>在代码块区域，&amp;、&lt;、&gt;会自动转换为html实体，顾代码块中的html会显示为html样式。</del></p><p>例如：</p><p>???</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>course<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>day 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>day 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>day 3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Kangkang<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Mary<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Jan<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-6引用"><a href="#1-6引用" class="headerlink" title="1.6引用"></a>1.6引用</h2><p>在被引用的文本前添加&gt;符号和一个空格。</p><blockquote><p>引用</p></blockquote><p>引用嵌套：</p><p>?</p><p>引用其他要素</p><p>？</p><h2 id="1-7列表"><a href="#1-7列表" class="headerlink" title="1.7列表"></a>1.7列表</h2><ol><li>无序列表<br>使用*，+，-跟随空格表示无序列表</li></ol><ul><li>列表一</li><li>列表二</li></ul><ol start="2"><li>有序列表</li></ol><p>使用数字和英文句点表示有序列表，后跟空格。</p><ol start="3"><li><p>无序和有序可嵌套使用</p><ol><li>上一级和下一级之间敲三个空格（或者在缩进后直接敲）</li></ol></li><li><p>列表与其他混用</p><ul><li><ol><li><del>文字</del></li></ol></li></ul></li><li><p>注意事项</p><ul><li><p>加粗效果不能直接用于列表标题，但可以嵌套在列表中使用</p></li><li><p>列表中包含代码块，前面需要两个tab且空一行</p></li><li><p>使用列表时，数字后面+英文点号+空格，可能会被误判为列表，需使用转义字符\。</p></li></ul></li></ol><h2 id="1-8表格"><a href="#1-8表格" class="headerlink" title="1.8表格"></a>1.8表格</h2><p>表格的使用:</p><p><strong>注意行与行之间不能有空格，按回车时建议使用shift</strong></p><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名<span class="params">|技能|</span>排行</span><br><span class="line">--<span class="params">|:--:|</span>--:</span><br><span class="line">刘备<span class="params">|哭|</span>大哥</span><br><span class="line">关羽<span class="params">|打|</span>二哥</span><br><span class="line">张飞<span class="params">|骂|</span>三弟</span><br></pre></td></tr></table></figure><h1 id="2快捷键"><a href="#2快捷键" class="headerlink" title="2快捷键"></a>2快捷键</h1><table><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td><strong>加粗</strong></td><td>ctrl+b</td></tr><tr><td><em>斜体</em></td><td>ctrl+i</td></tr><tr><td>引用</td><td>ctrl+q</td></tr><tr><td>插入链接</td><td>ctrl+l</td></tr><tr><td>插入代码</td><td>ctrl+k</td></tr><tr><td>插入图片</td><td>ctrl+g</td></tr><tr><td>提升标题</td><td>ctrl+h</td></tr><tr><td>有序列表</td><td>ctrl+o</td></tr><tr><td><u>无序列表</u></td><td>ctrl+u</td></tr><tr><td>横线</td><td>ctrl+r</td></tr><tr><td>撤销</td><td>ctrl+z</td></tr><tr><td>重做</td><td>ctrl+y</td></tr></tbody></table><h1 id="3-常用技巧"><a href="#3-常用技巧" class="headerlink" title="3.常用技巧"></a>3.常用技巧</h1><h2 id="3-1换行"><a href="#3-1换行" class="headerlink" title="3.1换行"></a>3.1换行</h2><ul><li><p>方法1：连续两个以上空格+回车</p></li><li><p>方法2：使用html中的<br></p></li></ul><h2 id="3-2缩进字符"><a href="#3-2缩进字符" class="headerlink" title="3.2缩进字符"></a>3.2缩进字符</h2><h2 id="3-3-特殊字符"><a href="#3-3-特殊字符" class="headerlink" title="3.3 特殊字符"></a>3.3 特殊字符</h2><ol><li><p>对于markdown中的语法符号，前方添加反斜线\即可显示符号本身</p></li><li><p>其他字符查看对于的Unicode码，参考网站：<a href="https://unicode-table.com/cn/">https://unicode-table.com/cn/</a></p></li></ol><h2 id="3-4-字体，字号，颜色"><a href="#3-4-字体，字号，颜色" class="headerlink" title="3.4 字体，字号，颜色"></a>3.4 字体，字号，颜色</h2><p>利用html内嵌代码实现</p><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/image-20210629115237467.png"></p><h2 id="3-5-高级链接"><a href="#3-5-高级链接" class="headerlink" title="3.5 高级链接"></a>3.5 高级链接</h2><ul><li><p>行内式</p></li><li><p>参考式连接</p></li><li><p>内容目录<br>在段落中填写[TOC]以显示全文内容的目录</p></li></ul><p>[TOC]</p><ul><li><p>锚点：</p><p>即页内超链接</p><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/image-20210629115733687.png" alt="image-20210629115733687"></p></li><li><p>注脚[^注脚名字]，实现，例如[^1]</p></li><li><p>背景色<br>采用内置html实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;背景色是：orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><table><tr><td bgcolor="orange">背景色是：orange</td></tr></table></li><li><p>emoji表情符号</p><p>emoji表情使用:EMOJICODE:的格式，详细列表可见<br><a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/">https://www.webpagefx.com/tools/emoji-cheat-sheet/</a></p></li></ul><h1 id="4高级用法"><a href="#4高级用法" class="headerlink" title="4高级用法"></a>4高级用法</h1><h2 id="4-1latex数学公式"><a href="#4-1latex数学公式" class="headerlink" title="4.1latex数学公式"></a>4.1latex数学公式</h2><p>1.行内公式：使用两个”$”符号引用公式:</p><p>$公式$</p><p>2.行间公式：使用两对“$$”符号引用公式：</p><p>$$公式$$</p><p>输入$\sqrt{x^{2}}$<br>$<br>\sqrt{x^{2}}<br>$<br>具体可以参考 markdown编辑器使用LaTex数学公式（<a href="https://link.jianshu.com/?t=http://blog.csdn.net/testcs_dn/article/details/44229085%EF%BC%89">https://link.jianshu.com/?t=http%3A%2F%2Fblog.csdn.net%2Ftestcs_dn%2Farticle%2Fdetails%2F44229085）</a></p><p>latex数学符号详见：<a href="https://www.mohu.org/info/symbols/symbols.htm">常用数学符号的 LaTeX 表示方法</a></p><h2 id="4-2流程图"><a href="#4-2流程图" class="headerlink" title="4.2流程图"></a>4.2流程图</h2><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/20180802165820199" alt="img"></p><h2 id="4-3-待办事项：Todo列表："><a href="#4-3-待办事项：Todo列表：" class="headerlink" title="4.3 待办事项：Todo列表："></a>4.3 待办事项：Todo列表：</h2><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/20180802165859799" alt="img"></p><h2 id="4-4-绘制序列图"><a href="#4-4-绘制序列图" class="headerlink" title="4.4 绘制序列图"></a>4.4 绘制序列图</h2><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/2018080216592352" alt="img"></p><h2 id="4-5绘制甘特图"><a href="#4-5绘制甘特图" class="headerlink" title="4.5绘制甘特图"></a>4.5绘制甘特图</h2><p><img src="/2021/06/29/markdown%E8%AF%AD%E6%B3%95/20180802165941601" alt="img"></p><p>参考文章：</p><p><a href="https://blog.csdn.net/u014061630/article/details/81359144">https://blog.csdn.net/u014061630/article/details/81359144</a></p><p><a href="https://www.jianshu.com/p/191d1e21f7ed">https://www.jianshu.com/p/191d1e21f7ed</a></p><p><a href="http://markdown.p2hp.com/basic-syntax/">http://markdown.p2hp.com/basic-syntax/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;1-基本语法&quot;&gt;&lt;a href=&quot;#1-基本语法&quot; class=&quot;headerlink&quot; title=&quot;1.基本语法&quot;&gt;&lt;/a&gt;1.基本语法&lt;/h1&gt;&lt;h2 id=&quot;1-1-字体设置（斜体、粗体、删除线）&quot;&gt;&lt;a href=&quot;#1-1-字体设置（斜体、粗体、删除线）&quot; class=&quot;headerlink&quot; title=&quot;1.1 字体设置（斜体、粗体、删除线）&quot;&gt;&lt;/a&gt;1.1 字体设置（斜体、粗体、删除线）&lt;/h2&gt;&lt;p&gt;正常文字&lt;br&gt;&lt;em&gt;斜体文字&lt;/em&gt;&lt;br&gt;&lt;em&gt;斜体文字&lt;/em&gt;&lt;br&gt;&lt;strong&gt;加粗文字&lt;/strong&gt;&lt;br&gt;&lt;em&gt;&lt;strong&gt;斜体加粗&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;&lt;del&gt;删除线&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/06/29/markdown%E8%AF%AD%E6%B3%95/image-20210629101027698.png&quot; alt=&quot;image-20210629101027698&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-2分级标题&quot;&gt;&lt;a href=&quot;#1-2分级标题&quot; class=&quot;headerlink&quot; title=&quot;1.2分级标题&quot;&gt;&lt;/a&gt;1.2分级标题&lt;/h2&gt;&lt;p&gt;标题用#+空格+标题内容表示，一个#号表示一级标题，最多为六级标题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/06/29/markdown%E8%AF%AD%E6%B3%95/image-20210629101313316.png&quot; alt=&quot;image-20210629101313316&quot;&gt;&lt;/p&gt;
&lt;p&gt;写法二：&lt;/p&gt;
&lt;p&gt;略，待更新&lt;/p&gt;</summary>
    
    
    
    <category term="语言" scheme="https://stary1999.github.io/categories/%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="语法" scheme="https://stary1999.github.io/tags/%E8%AF%AD%E6%B3%95/"/>
    
    <category term="入门" scheme="https://stary1999.github.io/tags/%E5%85%A5%E9%97%A8/"/>
    
    <category term="markdown" scheme="https://stary1999.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>post test 2</title>
    <link href="https://stary1999.github.io/2021/06/28/post-test-2/"/>
    <id>https://stary1999.github.io/2021/06/28/post-test-2/</id>
    <published>2021-06-28T10:12:38.000Z</published>
    <updated>2021-06-28T10:12:38.733Z</updated>
    
    
    
    
    
    <category term="default" scheme="https://stary1999.github.io/tags/default/"/>
    
  </entry>
  
  <entry>
    <title>4_29_tomcat and severlet</title>
    <link href="https://stary1999.github.io/2021/06/28/old-4-29-tomcat-and-severlet/"/>
    <id>https://stary1999.github.io/2021/06/28/old-4-29-tomcat-and-severlet/</id>
    <published>2021-06-28T10:12:38.000Z</published>
    <updated>2021-06-28T10:18:41.907Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-idea激活，使用30天试用期插件"><a href="#1-idea激活，使用30天试用期插件" class="headerlink" title="1.idea激活，使用30天试用期插件"></a>1.idea激活，使用30天试用期插件</h3><h3 id="2-tomcat日志乱码，"><a href="#2-tomcat日志乱码，" class="headerlink" title="2.tomcat日志乱码，"></a>2.tomcat日志乱码，</h3><p><img src="file:///C:/Users/张雄/AppData/Local/Temp/msohtmlclip1/01/clip_image001.png" alt="img"></p><p>找到tomcat安装目录conf下logging.properties文件，打开后搜索：java.util.logging.ConsoleHandler.encoding</p><p>修改为GBK</p><p><img src="file:///C:/Users/张雄/AppData/Local/Temp/msohtmlclip1/01/clip_image003.jpg" alt="img"></p><h3 id="3-tomcat服务器使用："><a href="#3-tomcat服务器使用：" class="headerlink" title="3.tomcat服务器使用："></a>3.tomcat服务器使用：</h3><p>   a，正常流程安装，安装好后，浏览器输入localhost:8080测试，注意JDK路径与环境变量配置</p><p>   b，与idea关联使用：</p><p>​       注意事项：每次修改服务的相关代码后，都需要重启tomcat服务，（例如servlet），tomcat启动较慢，修改其他文件可以不用重启服务，只需重新编译class和资源。</p><p>   <img src="file:///C:/Users/张雄/AppData/Local/Temp/msohtmlclip1/01/clip_image005.jpg" alt="img"></p><p><img src="file:///C:/Users/张雄/AppData/Local/Temp/msohtmlclip1/01/clip_image007.jpg" alt="img"></p><p><img src="file:///C:/Users/张雄/AppData/Local/Temp/msohtmlclip1/01/clip_image009.jpg" alt="img"></p><p><img src="file:///C:/Users/张雄/AppData/Local/Temp/msohtmlclip1/01/clip_image011.jpg" alt="img"></p><h3 id="4-书城阶段总结："><a href="#4-书城阶段总结：" class="headerlink" title="4.书城阶段总结："></a>4.书城阶段总结：</h3><p>   前端html+css实现静态样式</p><p>   jquary用来做事件响应，（表单验证）</p><p>   tomcat作服务器，servlet用来响应请求。实现页面跳转以及从客户端获取、处理数据。</p><h3 id="5-servlet："><a href="#5-servlet：" class="headerlink" title="5.servlet："></a>5.servlet：</h3><p>​    重定向、请求分发，响应流</p><p>注意：     设置服务器、浏览器的编码。</p><p>​                   在web.xml中需要声明servlet。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-idea激活，使用30天试用期插件&quot;&gt;&lt;a href=&quot;#1-idea激活，使用30天试用期插件&quot; class=&quot;headerlink&quot; title=&quot;1.idea激活，使用30天试用期插件&quot;&gt;&lt;/a&gt;1.idea激活，使用30天试用期插件&lt;/h3&gt;&lt;h3 i</summary>
      
    
    
    
    
    <category term="default" scheme="https://stary1999.github.io/tags/default/"/>
    
  </entry>
  
  <entry>
    <title>MySQL</title>
    <link href="https://stary1999.github.io/2021/06/28/old-4-30-MySQL/"/>
    <id>https://stary1999.github.io/2021/06/28/old-4-30-MySQL/</id>
    <published>2021-06-28T10:12:38.000Z</published>
    <updated>2021-06-28T10:18:16.199Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Idea连接MySQL常见报错"><a href="#1-Idea连接MySQL常见报错" class="headerlink" title="1.Idea连接MySQL常见报错"></a>1.Idea连接MySQL常见报错</h2><h4 id="a-驱动版本与MySQL版本不同"><a href="#a-驱动版本与MySQL版本不同" class="headerlink" title="a.驱动版本与MySQL版本不同"></a>a.驱动版本与MySQL版本不同</h4><p><img src="/2021/06/28/old-4-30-MySQL/Users\张雄\AppData\Roaming\Typora\typora-user-images\image-20210430123446936.png" alt="image-20210430123446936"></p><h4 id="b-时区错误："><a href="#b-时区错误：" class="headerlink" title="b.时区错误："></a>b.时区错误：</h4><p>连接MySQL后，输入下列命令。</p><p><img src="/2021/06/28/old-4-30-MySQL/Users\张雄\AppData\Roaming\Typora\typora-user-images\image-20210430123607848.png" alt="image-20210430123607848"></p><h4 id="c-驱动弃用"><a href="#c-驱动弃用" class="headerlink" title="c.驱动弃用"></a>c.驱动弃用</h4><p>修改配置文件驱动</p><p><img src="/2021/06/28/old-4-30-MySQL/Users\张雄\AppData\Roaming\Typora\typora-user-images\image-20210430123855060.png" alt="image-20210430123855060"></p><h5 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h5><p><img src="/2021/06/28/old-4-30-MySQL/Users\张雄\AppData\Roaming\Typora\typora-user-images\image-20210430125823512.png" alt="image-20210430125823512"></p><h4 id="d-加密方式变化"><a href="#d-加密方式变化" class="headerlink" title="d.加密方式变化"></a>d.加密方式变化</h4><p>MySQL8.0后加密方式变化，可能出现连接不上的问题</p><p>报错：Client does not support authentication protocol requested by server; consider upgrading MySQL client</p><p>mysql8 之前的版本中加密规则是mysql_native_password,而在mysql8之后,加密规则是caching_sha2_password</p><p><img src="/2021/06/28/old-4-30-MySQL/Users\张雄\AppData\Roaming\Typora\typora-user-images\image-20210430124334509.png" alt="image-20210430124334509"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-Idea连接MySQL常见报错&quot;&gt;&lt;a href=&quot;#1-Idea连接MySQL常见报错&quot; class=&quot;headerlink&quot; title=&quot;1.Idea连接MySQL常见报错&quot;&gt;&lt;/a&gt;1.Idea连接MySQL常见报错&lt;/h2&gt;&lt;h4 id=&quot;a-驱动版</summary>
      
    
    
    
    
    <category term="default" scheme="https://stary1999.github.io/tags/default/"/>
    
  </entry>
  
  <entry>
    <title>firefox主页被劫持</title>
    <link href="https://stary1999.github.io/2021/06/28/old-firefox%E4%B8%BB%E9%A1%B5%E8%A2%AB%E5%8A%AB%E6%8C%81/"/>
    <id>https://stary1999.github.io/2021/06/28/old-firefox%E4%B8%BB%E9%A1%B5%E8%A2%AB%E5%8A%AB%E6%8C%81/</id>
    <published>2021-06-28T10:12:38.000Z</published>
    <updated>2021-06-28T10:17:44.128Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h4><p>打开浏览器，自动弹出360的界面</p><h4 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h4><p>解决方案一：</p><p>进行主页修复，重设火狐主页，详情请访问： <a href="http://doc.firefoxchina.cn/document/repair/">http://doc.firefoxchina.cn/document/repair/</a></p><p>解决方案二：<br>如果无法修改选项中火狐主页的地址，可能中了恶意扩展或者火狐配置被篡改。</p><p>1.检查 附加组件 – 扩展 中是否有可疑扩展，禁用掉。<br>2.在地址栏里输入”about:support”<br>3.单击配置文件夹后的”显示文件夹”按钮。<br>4.在弹出来的文件夹中找到那个叫做”user.js”的文件，右键选择”编辑”。<br>5.在弹出来的窗口中找到user_pref(“browser.startup.homepage”, “被锁定的网址”)<br>6.直接删除”user.js”或者删除这行代码。</p><p>解决方案三：</p><p>如果还不行，就在你安装的路径打开火狐，如果打开没没被劫持就是快捷方式被篡改了，将快捷方式去掉，重新生成。</p><p><img src="/2021/06/28/old-firefox%E4%B8%BB%E9%A1%B5%E8%A2%AB%E5%8A%AB%E6%8C%81/Users\张雄\AppData\Roaming\Typora\typora-user-images\image-20210503114125619.png" alt="image-20210503114125619"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h4&gt;&lt;p&gt;打开浏览器，自动弹出360的界面&lt;/p&gt;
&lt;h4 id=&quot;解决：&quot;&gt;&lt;a href=&quot;#解决：&quot; class=&quot;he</summary>
      
    
    
    
    
    <category term="default" scheme="https://stary1999.github.io/tags/default/"/>
    
  </entry>
  
  <entry>
    <title>idea 使用指南</title>
    <link href="https://stary1999.github.io/2021/06/28/old-idea%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>https://stary1999.github.io/2021/06/28/old-idea%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2021-06-28T10:12:38.000Z</published>
    <updated>2021-06-28T10:50:45.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h4 id="1-try-catch-、生成测试"><a href="#1-try-catch-、生成测试" class="headerlink" title="1.try-catch 、生成测试"></a>1.try-catch 、生成测试</h4><p>ctrl+alt+t</p><h4 id="2-快速生成get、set等函数"><a href="#2-快速生成get、set等函数" class="headerlink" title="2.快速生成get、set等函数"></a>2.快速生成get、set等函数</h4><p>alt+insert</p><h4 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h4><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p>断点+debug</p><p>run模式和debug模式</p><h2 id="修改配置文件需要重新部署"><a href="#修改配置文件需要重新部署" class="headerlink" title="修改配置文件需要重新部署"></a>修改配置文件需要重新部署</h2><p>例如：web.xml</p><p>修改代码热部署即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h2&gt;&lt;h4 id=&quot;1-try-catch-、生成测试&quot;&gt;&lt;a href=&quot;#1-try-catch-、生成测试&quot; class=&quot;header</summary>
      
    
    
    
    <category term="工具" scheme="https://stary1999.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="default" scheme="https://stary1999.github.io/tags/default/"/>
    
    <category term="idea" scheme="https://stary1999.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://stary1999.github.io/2021/06/28/hello-world/"/>
    <id>https://stary1999.github.io/2021/06/28/hello-world/</id>
    <published>2021-06-28T02:22:28.784Z</published>
    <updated>2021-06-28T02:22:28.784Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
